name: Deploy AKS Store Demo

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AKS_CLUSTER_NAME: aks-cluster-5q074gff
  RESOURCE_GROUP: rg-aks-5q074gff
  NAMESPACE: aks-store-demo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Create namespace
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy AKS Store Demo
        run: |
          kubectl apply -f manifests/aks-store-quickstart.yaml \
          -n ${{ env.NAMESPACE }}

      - name: Wait for deployments
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/store-front -n ${{ env.NAMESPACE }}
          kubectl wait --for=condition=available --timeout=300s deployment/product-service -n ${{ env.NAMESPACE }}
          kubectl wait --for=condition=available --timeout=300s deployment/order-service -n ${{ env.NAMESPACE }}
          kubectl wait --for=condition=available --timeout=300s statefulset/rabbitmq -n ${{ env.NAMESPACE }}

      - name: Get service URLs
        run: |
          echo "Store Front Service:"
          kubectl get service store-front -n ${{ env.NAMESPACE }} -o wide
          echo ""
          echo "Product Service:"
          kubectl get service product-service -n ${{ env.NAMESPACE }} -o wide
          echo ""
          echo "Order Service:"
          kubectl get service order-service -n ${{ env.NAMESPACE }} -o wide

      - name: Get deployment status
        run: |
          echo "=== Deployments ==="
          kubectl get deployments -n ${{ env.NAMESPACE }}
          echo ""
          echo "=== Services ==="
          kubectl get services -n ${{ env.NAMESPACE }}
          echo ""
          echo "=== Pods ==="
          kubectl get pods -n ${{ env.NAMESPACE }}
