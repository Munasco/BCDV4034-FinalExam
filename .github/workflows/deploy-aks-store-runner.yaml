name: Deploy AKS Store Demo - Self-Hosted Runner

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  RESOURCE_GROUP: rg-aks-final
  CLUSTER_NAME: aks-final-cluster
  LOCATION: eastus

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure CLI Login with Managed Identity
        run: |
          # Login using the managed identity assigned to the VM
          az login --identity --client-id 893a4871-96d2-4a32-b6c6-954045688408

      - name: Create AKS Cluster
        run: |
          # Check if AKS cluster exists, create if it doesn't
          if ! az aks show --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --query name -o tsv 2>/dev/null; then
            echo "Creating AKS cluster..."
            az aks create \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --name ${{ env.CLUSTER_NAME }} \
              --node-count 1 \
              --enable-addons monitoring \
              --generate-ssh-keys \
              --location ${{ env.LOCATION }} \
              --yes
          else
            echo "AKS cluster already exists, skipping creation..."
          fi

      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.CLUSTER_NAME }} \
            --overwrite-existing

            - name: Deploy AKS Store Demo
        run: |
          # Create namespace first
          kubectl create namespace aks-store-demo --dry-run=client -o yaml | kubectl apply -f -
          
          # Apply the store demo
          kubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-quickstart.yaml
          
          # Wait for deployments to be ready
          kubectl wait --for=condition=available --timeout=300s deployment/store-front -n aks-store-demo
          kubectl wait --for=condition=available --timeout=300s deployment/product-service -n aks-store-demo
          kubectl wait --for=condition=available --timeout=300s deployment/order-service -n aks-store-demo

      - name: Get Service URLs
        run: |
          echo "=== AKS Store Demo Deployment Complete ==="
          echo "Store Front Service:"
          kubectl get service store-front -n aks-store-demo -o wide
          echo ""
          echo "Product Service:"
          kubectl get service product-service -n aks-store-demo -o wide
          echo ""
          echo "Order Service:"
          kubectl get service order-service -n aks-store-demo -o wide
          echo ""
          echo "=== Pod Status ==="
          kubectl get pods -n aks-store-demo
