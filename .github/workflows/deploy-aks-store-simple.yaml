name: Deploy AKS Store Demo - Simple Auth

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  RESOURCE_GROUP: rg-aks-store-demo
  CLUSTER_NAME: aks-store-cluster
  LOCATION: eastus

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure CLI Login
        run: |
          # Install Azure CLI
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash

          # Login with service principal using environment variables
          # We'll get these from Azure CLI commands
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.CLUSTER_NAME }} \
            --overwrite-existing

      - name: Deploy AKS Store Demo
        run: |
          # Apply the store demo
          kubectl apply -f https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-demo.yaml

          # Wait for deployments to be ready
          kubectl wait --for=condition=available --timeout=300s deployment/aks-store-demo-frontend -n aks-store-demo
          kubectl wait --for=condition=available --timeout=300s deployment/aks-store-demo-backend -n aks-store-demo

      - name: Get Service URLs
        run: |
          echo "=== AKS Store Demo Deployment Complete ==="
          echo "Frontend URL:"
          kubectl get service aks-store-demo-frontend -n aks-store-demo -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          echo ""
          echo "Backend URL:"
          kubectl get service aks-store-demo-backend -n aks-store-demo -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          echo ""
          echo "=== Pod Status ==="
          kubectl get pods -n aks-store-demo
